use std::collections::HashMap;

pub type Figure = char;

pub const WHITE_PAWN: Figure = '♙';
pub const WHITE_KNIGHT: Figure = '♘';
pub const WHITE_BISHOP: Figure = '♗';
pub const WHITE_ROOK: Figure = '♖';
pub const WHITE_QUEEN: Figure = '♕';
pub const WHITE_KING: Figure = '♔';

pub const BLACK_PAWN: Figure = '♟';
pub const BLACK_KNIGHT: Figure = '♞';
pub const BLACK_BISHOP: Figure = '♝';
pub const BLACK_ROOK: Figure = '♜';
pub const BLACK_QUEEN: Figure = '♛';
pub const BLACK_KING: Figure = '♚';

static MOVEMENT_KNIGHT: [[(i8, i8); 7]; 8] = [
    [
        (2, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (2, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, 2),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, 2),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-2, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-2, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, -2),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, -2),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
];

static MOVEMENT_BISHOP: [[(i8, i8); 7]; 8] = [
    [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)],
    [
        (1, -1),
        (2, -2),
        (3, -3),
        (4, -4),
        (5, -5),
        (6, -6),
        (7, -7),
    ],
    [
        (-1, 1),
        (-2, 2),
        (-3, 3),
        (-4, 4),
        (-5, 5),
        (-6, 6),
        (-7, 7),
    ],
    [
        (-1, -1),
        (-2, -2),
        (-3, -3),
        (-4, -4),
        (-5, -5),
        (-6, -6),
        (-7, -7),
    ],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
];

static MOVEMENT_ROOK: [[(i8, i8); 7]; 8] = [
    [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0)],
    [(0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7)],
    [
        (-1, 0),
        (-2, 0),
        (-3, 0),
        (-4, 0),
        (-5, 0),
        (-6, 0),
        (-7, 0),
    ],
    [
        (0, -1),
        (0, -2),
        (0, -3),
        (0, -4),
        (0, -5),
        (0, -6),
        (0, -7),
    ],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
];

static MOVEMENT_QUEEN: [[(i8, i8); 7]; 8] = [
    [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)],
    [(1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0)],
    [(0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7)],
    [
        (1, -1),
        (2, -2),
        (3, -3),
        (4, -4),
        (5, -5),
        (6, -6),
        (7, -7),
    ],
    [
        (-1, 1),
        (-2, 2),
        (-3, 3),
        (-4, 4),
        (-5, 5),
        (-6, 6),
        (-7, 7),
    ],
    [
        (-1, -1),
        (-2, -2),
        (-3, -3),
        (-4, -4),
        (-5, -5),
        (-6, -6),
        (-7, -7),
    ],
    [
        (-1, 0),
        (-2, 0),
        (-3, 0),
        (-4, 0),
        (-5, 0),
        (-6, 0),
        (-7, 0),
    ],
    [
        (0, -1),
        (0, -2),
        (0, -3),
        (0, -4),
        (0, -5),
        (0, -6),
        (0, -7),
    ],
];

static MOVEMENT_KING: [[(i8, i8); 7]; 8] = [
    [
        (1, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, 0),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (0, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, 0),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (0, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
];

static MOVEMENT_WHITE_PAWN_UNMOVED: [[(i8, i8); 7]; 8] = [
    [
        (0, 1),
        (0, 2),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
];

static MOVEMENT_WHITE_PAWN_MOVED: [[(i8, i8); 7]; 8] = [
    [
        (0, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, 1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
];

static MOVEMENT_BLACK_PAWN_UNMOVED: [[(i8, i8); 7]; 8] = [
    [
        (0, -1),
        (0, -2),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
];

static MOVEMENT_BLACK_PAWN_MOVED: [[(i8, i8); 7]; 8] = [
    [
        (0, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (1, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [
        (-1, -1),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
        (127, 127),
    ],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
    [(127, 127); 7],
];

pub fn get_moves(figure: Figure, y: i8) -> [[(i8, i8); 7]; 8] {
    match figure {
        WHITE_KNIGHT => MOVEMENT_KNIGHT,
        BLACK_KNIGHT => MOVEMENT_KNIGHT,
        WHITE_BISHOP => MOVEMENT_BISHOP,
        BLACK_BISHOP => MOVEMENT_BISHOP,
        WHITE_QUEEN => MOVEMENT_QUEEN,
        BLACK_QUEEN => MOVEMENT_QUEEN,
        WHITE_KING => MOVEMENT_KING,
        BLACK_KING => MOVEMENT_KING,
        WHITE_PAWN => {
            if y == 2 {
                MOVEMENT_WHITE_PAWN_UNMOVED
            } else {
                MOVEMENT_WHITE_PAWN_MOVED
            }
        }
        BLACK_PAWN => {
            if y == 7 {
                MOVEMENT_BLACK_PAWN_UNMOVED
            } else {
                MOVEMENT_BLACK_PAWN_MOVED
            }
        }
        _ => panic!("That figure does not exist!"),
    }
}
